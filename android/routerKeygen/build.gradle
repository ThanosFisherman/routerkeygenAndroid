import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "org.exobel.routerkeygen"
        minSdkVersion 16
        targetSdkVersion 25

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    productFlavors {
        github {
            applicationId "org.exobel.routerkeygen"
        }
        googleplay {
            applicationId "io.github.routerkeygen"
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set libs as .so's location instead of jniLibs
        jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
    }

    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        workingDir file('src/main')
        commandLine getNdkBuildCmd()
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    task cleanNative(type: Exec) {
        workingDir file('src/main')
        commandLine getNdkBuildCmd(), 'clean'
    }

    clean.dependsOn cleanNative

    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            jvmArgs '-XX:MaxPermSize=256m'
        }
    }
}

task copyResDirectoryToClasses(type: Copy){
    from "${projectDir}/src/main/res"
    into "${buildDir}/intermediates/classes/test/github/debug/res"
}

def getNdkDir() {
    if (System.env.ANDROID_NDK_ROOT != null)
        return System.env.ANDROID_NDK_ROOT

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir', null)
    if (ndkDir == null)
        throw new GradleException("NDK location not found. Define location with ndk.dir in the local.properties file or with an ANDROID_NDK_ROOT environment variable.")

    return ndkDir
}

def getNdkBuildCmd() {
    def ndkBuild = getNdkDir() + File.separator + "ndk-build"
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        ndkBuild += ".cmd"

    return ndkBuild
}


dependencies {
    compile project(':aFileChooser')
    compile 'com.android.support:support-v4:25.1.0'
    compile 'com.google.android.gms:play-services:10.0.1'
    compile 'com.google.android.gms:play-services-analytics:10.0.1'
    compile 'ch.acra:acra:4.8.2'
    testCompile 'junit:junit:4.12'
    compile project(':mm-ad-sdk')
}
apply plugin: 'com.google.gms.google-services'